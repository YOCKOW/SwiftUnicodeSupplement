//# DO NOT MODIFY.
//# This is autogenerated by `ySwiftCodeUpdater`(https://github.com/YOCKOW/ySwiftCodeUpdater).
//# Please see documents in this project to learn how to regenerate.
//# The material(s) to generate this file was/were obtained from below:
//
// URL: https://unicode.org/Public/emoji/latest/emoji-data.txt
// Last-Modified: 2019-10-21T16:02:40Z
// ETag: "95ca81-eb85-5956dd02ae800"

/*
  UNICODE, INC. LICENSE AGREEMENT - DATA FILES AND SOFTWARE
  
  See <a href="https://www.unicode.org/copyright.html">Terms of Use</a> for definitions of Unicode Inc.'s
  Data Files and Software.
  NOTICE TO USER: Carefully read the following legal agreement.
  BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S
  DATA FILES ("DATA FILES"), AND/OR SOFTWARE ("SOFTWARE"),
  YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE
  TERMS AND CONDITIONS OF THIS AGREEMENT.
  IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE
  THE DATA FILES OR SOFTWARE.
  COPYRIGHT AND PERMISSION NOTICE
  Copyright Â© 1991-2019 Unicode, Inc. All rights reserved.
  Distributed under the Terms of Use in https://www.unicode.org/copyright.html.
  Permission is hereby granted, free of charge, to any person obtaining
  a copy of the Unicode data files and any associated documentation
  (the "Data Files") or Unicode software and any associated documentation
  (the "Software") to deal in the Data Files or Software
  without restriction, including without limitation the rights to use,
  copy, modify, merge, publish, distribute, and/or sell copies of
  the Data Files or Software, and to permit persons to whom the Data Files
  or Software are furnished to do so, provided that either
  (a) this copyright and permission notice appear with all copies
  of the Data Files or Software, or
  (b) this copyright and permission notice appear in associated
  Documentation.
  THE DATA FILES AND SOFTWARE ARE PROVIDED "AS IS", WITHOUT WARRANTY OF
  ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT OF THIRD PARTY RIGHTS.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS
  NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL
  DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
  DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THE DATA FILES OR SOFTWARE.
  Except as contained in this notice, the name of a copyright holder
  shall not be used in advertising or otherwise to promote the sale,
  use or other dealings in these Data Files or Software without prior
  written authorization of the copyright holder.
*/

// Required Modules
import Ranges

// Type Aliases
private typealias _T0 = Unicode.Scalar.Value
private typealias _T1 = Set<_T0>
private typealias _T2 = AnyRange<_T0>
private typealias _T3 = Array<_T2>

/* ********************************************************************************************** */
// Emoji Property: Emoji
private let __emoji_Emoji_set: _T1 = [
  0x23,
  0x2a,
  0x30,
  0x31,
  0x32,
  0x33,
  0x34,
  0x35,
  0x36,
  0x37,
  0x38,
  0x39,
  0xa9,
  0xae,
  0x203c,
  0x2049,
  0x2122,
  0x2139,
  0x2194,
  0x2195,
  0x2196,
  0x2197,
  0x2198,
  0x2199,
  0x21a9,
  0x21aa,
  0x231a,
  0x231b,
  0x2328,
  0x23cf,
  0x23e9,
  0x23ea,
  0x23eb,
  0x23ec,
  0x23ed,
  0x23ee,
  0x23ef,
  0x23f0,
  0x23f1,
  0x23f2,
  0x23f3,
  0x23f8,
  0x23f9,
  0x23fa,
  0x24c2,
  0x25aa,
  0x25ab,
  0x25b6,
  0x25c0,
  0x25fb,
  0x25fc,
  0x25fd,
  0x25fe,
  0x2600,
  0x2601,
  0x2602,
  0x2603,
  0x2604,
  0x260e,
  0x2611,
  0x2614,
  0x2615,
  0x2618,
  0x261d,
  0x2620,
  0x2622,
  0x2623,
  0x2626,
  0x262a,
  0x262e,
  0x262f,
  0x2638,
  0x2639,
  0x263a,
  0x2640,
  0x2642,
  0x2648,
  0x2649,
  0x264a,
  0x264b,
  0x264c,
  0x264d,
  0x264e,
  0x264f,
  0x2650,
  0x2651,
  0x2652,
  0x2653,
  0x265f,
  0x2660,
  0x2663,
  0x2665,
  0x2666,
  0x2668,
  0x267b,
  0x267e,
  0x267f,
  0x2692,
  0x2693,
  0x2694,
  0x2695,
  0x2696,
  0x2697,
  0x2699,
  0x269b,
  0x269c,
  0x26a0,
  0x26a1,
  0x26aa,
  0x26ab,
  0x26b0,
  0x26b1,
  0x26bd,
  0x26be,
  0x26c4,
  0x26c5,
  0x26c8,
  0x26ce,
  0x26cf,
  0x26d1,
  0x26d3,
  0x26d4,
  0x26e9,
  0x26ea,
  0x26f0,
  0x26f1,
  0x26f2,
  0x26f3,
  0x26f4,
  0x26f5,
  0x26f7,
  0x26f8,
  0x26f9,
  0x26fa,
  0x26fd,
  0x2702,
  0x2705,
  0x2708,
  0x2709,
  0x270a,
  0x270b,
  0x270c,
  0x270d,
  0x270f,
  0x2712,
  0x2714,
  0x2716,
  0x271d,
  0x2721,
  0x2728,
  0x2733,
  0x2734,
  0x2744,
  0x2747,
  0x274c,
  0x274e,
  0x2753,
  0x2754,
  0x2755,
  0x2757,
  0x2763,
  0x2764,
  0x2795,
  0x2796,
  0x2797,
  0x27a1,
  0x27b0,
  0x27bf,
  0x2934,
  0x2935,
  0x2b05,
  0x2b06,
  0x2b07,
  0x2b1b,
  0x2b1c,
  0x2b50,
  0x2b55,
  0x3030,
  0x303d,
  0x3297,
  0x3299,
  0x1f004,
  0x1f0cf,
  0x1f170,
  0x1f171,
  0x1f17e,
  0x1f17f,
  0x1f18e,
  0x1f191,
  0x1f192,
  0x1f193,
  0x1f194,
  0x1f195,
  0x1f196,
  0x1f197,
  0x1f198,
  0x1f199,
  0x1f19a,
  0x1f1e6,
  0x1f1e7,
  0x1f1e8,
  0x1f1e9,
  0x1f1ea,
  0x1f1eb,
  0x1f1ec,
  0x1f1ed,
  0x1f1ee,
  0x1f1ef,
  0x1f1f0,
  0x1f1f1,
  0x1f1f2,
  0x1f1f3,
  0x1f1f4,
  0x1f1f5,
  0x1f1f6,
  0x1f1f7,
  0x1f1f8,
  0x1f1f9,
  0x1f1fa,
  0x1f1fb,
  0x1f1fc,
  0x1f1fd,
  0x1f1fe,
  0x1f1ff,
  0x1f201,
  0x1f202,
  0x1f21a,
  0x1f22f,
  0x1f232,
  0x1f233,
  0x1f234,
  0x1f235,
  0x1f236,
  0x1f237,
  0x1f238,
  0x1f239,
  0x1f23a,
  0x1f250,
  0x1f251,
  0x1f300,
  0x1f301,
  0x1f302,
  0x1f303,
  0x1f304,
  0x1f305,
  0x1f306,
  0x1f307,
  0x1f308,
  0x1f309,
  0x1f30a,
  0x1f30b,
  0x1f30c,
  0x1f30d,
  0x1f30e,
  0x1f30f,
  0x1f310,
  0x1f311,
  0x1f312,
  0x1f313,
  0x1f314,
  0x1f315,
  0x1f316,
  0x1f317,
  0x1f318,
  0x1f319,
  0x1f31a,
  0x1f31b,
  0x1f31c,
  0x1f31d,
  0x1f31e,
  0x1f31f,
  0x1f320,
  0x1f321,
  0x1f396,
  0x1f397,
  0x1f399,
  0x1f39a,
  0x1f39b,
  0x1f3f3,
  0x1f3f4,
  0x1f3f5,
  0x1f549,
  0x1f54a,
  0x1f54b,
  0x1f54c,
  0x1f54d,
  0x1f54e,
  0x1f550,
  0x1f551,
  0x1f552,
  0x1f553,
  0x1f554,
  0x1f555,
  0x1f556,
  0x1f557,
  0x1f558,
  0x1f559,
  0x1f55a,
  0x1f55b,
  0x1f55c,
  0x1f55d,
  0x1f55e,
  0x1f55f,
  0x1f560,
  0x1f561,
  0x1f562,
  0x1f563,
  0x1f564,
  0x1f565,
  0x1f566,
  0x1f567,
  0x1f56f,
  0x1f570,
  0x1f573,
  0x1f574,
  0x1f575,
  0x1f576,
  0x1f577,
  0x1f578,
  0x1f579,
  0x1f57a,
  0x1f587,
  0x1f58a,
  0x1f58b,
  0x1f58c,
  0x1f58d,
  0x1f590,
  0x1f595,
  0x1f596,
  0x1f5a4,
  0x1f5a5,
  0x1f5a8,
  0x1f5b1,
  0x1f5b2,
  0x1f5bc,
  0x1f5c2,
  0x1f5c3,
  0x1f5c4,
  0x1f5d1,
  0x1f5d2,
  0x1f5d3,
  0x1f5dc,
  0x1f5dd,
  0x1f5de,
  0x1f5e1,
  0x1f5e3,
  0x1f5e8,
  0x1f5ef,
  0x1f5f3,
  0x1f6cb,
  0x1f6cc,
  0x1f6cd,
  0x1f6ce,
  0x1f6cf,
  0x1f6d0,
  0x1f6d1,
  0x1f6d2,
  0x1f6d5,
  0x1f6e0,
  0x1f6e1,
  0x1f6e2,
  0x1f6e3,
  0x1f6e4,
  0x1f6e5,
  0x1f6e9,
  0x1f6eb,
  0x1f6ec,
  0x1f6f0,
  0x1f6f3,
  0x1f6f4,
  0x1f6f5,
  0x1f6f6,
  0x1f6f7,
  0x1f6f8,
  0x1f6f9,
  0x1f6fa,
  0x1f7e0,
  0x1f7e1,
  0x1f7e2,
  0x1f7e3,
  0x1f7e4,
  0x1f7e5,
  0x1f7e6,
  0x1f7e7,
  0x1f7e8,
  0x1f7e9,
  0x1f7ea,
  0x1f7eb,
  0x1f90d,
  0x1f90e,
  0x1f90f,
  0x1f910,
  0x1f911,
  0x1f912,
  0x1f913,
  0x1f914,
  0x1f915,
  0x1f916,
  0x1f917,
  0x1f918,
  0x1f919,
  0x1f91a,
  0x1f91b,
  0x1f91c,
  0x1f91d,
  0x1f91e,
  0x1f91f,
  0x1f920,
  0x1f921,
  0x1f922,
  0x1f923,
  0x1f924,
  0x1f925,
  0x1f926,
  0x1f927,
  0x1f928,
  0x1f929,
  0x1f92a,
  0x1f92b,
  0x1f92c,
  0x1f92d,
  0x1f92e,
  0x1f92f,
  0x1f930,
  0x1f931,
  0x1f932,
  0x1f933,
  0x1f934,
  0x1f935,
  0x1f936,
  0x1f937,
  0x1f938,
  0x1f939,
  0x1f93a,
  0x1f93c,
  0x1f93d,
  0x1f93e,
  0x1f93f,
  0x1f940,
  0x1f941,
  0x1f942,
  0x1f943,
  0x1f944,
  0x1f945,
  0x1f947,
  0x1f948,
  0x1f949,
  0x1f94a,
  0x1f94b,
  0x1f94c,
  0x1f94d,
  0x1f94e,
  0x1f94f,
  0x1f950,
  0x1f951,
  0x1f952,
  0x1f953,
  0x1f954,
  0x1f955,
  0x1f956,
  0x1f957,
  0x1f958,
  0x1f959,
  0x1f95a,
  0x1f95b,
  0x1f95c,
  0x1f95d,
  0x1f95e,
  0x1f95f,
  0x1f960,
  0x1f961,
  0x1f962,
  0x1f963,
  0x1f964,
  0x1f965,
  0x1f966,
  0x1f967,
  0x1f968,
  0x1f969,
  0x1f96a,
  0x1f96b,
  0x1f96c,
  0x1f96d,
  0x1f96e,
  0x1f96f,
  0x1f970,
  0x1f971,
  0x1f973,
  0x1f974,
  0x1f975,
  0x1f976,
  0x1f97a,
  0x1f97b,
  0x1f97c,
  0x1f97d,
  0x1f97e,
  0x1f97f,
  0x1f980,
  0x1f981,
  0x1f982,
  0x1f983,
  0x1f984,
  0x1f985,
  0x1f986,
  0x1f987,
  0x1f988,
  0x1f989,
  0x1f98a,
  0x1f98b,
  0x1f98c,
  0x1f98d,
  0x1f98e,
  0x1f98f,
  0x1f990,
  0x1f991,
  0x1f992,
  0x1f993,
  0x1f994,
  0x1f995,
  0x1f996,
  0x1f997,
  0x1f998,
  0x1f999,
  0x1f99a,
  0x1f99b,
  0x1f99c,
  0x1f99d,
  0x1f99e,
  0x1f99f,
  0x1f9a0,
  0x1f9a1,
  0x1f9a2,
  0x1f9a5,
  0x1f9a6,
  0x1f9a7,
  0x1f9a8,
  0x1f9a9,
  0x1f9aa,
  0x1f9ae,
  0x1f9af,
  0x1f9b0,
  0x1f9b1,
  0x1f9b2,
  0x1f9b3,
  0x1f9b4,
  0x1f9b5,
  0x1f9b6,
  0x1f9b7,
  0x1f9b8,
  0x1f9b9,
  0x1f9ba,
  0x1f9bb,
  0x1f9bc,
  0x1f9bd,
  0x1f9be,
  0x1f9bf,
  0x1f9c0,
  0x1f9c1,
  0x1f9c2,
  0x1f9c3,
  0x1f9c4,
  0x1f9c5,
  0x1f9c6,
  0x1f9c7,
  0x1f9c8,
  0x1f9c9,
  0x1f9ca,
  0x1fa70,
  0x1fa71,
  0x1fa72,
  0x1fa73,
  0x1fa78,
  0x1fa79,
  0x1fa7a,
  0x1fa80,
  0x1fa81,
  0x1fa82,
  0x1fa90,
  0x1fa91,
  0x1fa92,
  0x1fa93,
  0x1fa94,
  0x1fa95,
]
private let __emoji_Emoji_range_0: _T2 = 0x1f324....0x1f393
private let __emoji_Emoji_range_1: _T2 = 0x1f39e....0x1f3f0
private let __emoji_Emoji_range_2: _T2 = 0x1f3f7....0x1f4fd
private let __emoji_Emoji_range_3: _T2 = 0x1f4ff....0x1f53d
private let __emoji_Emoji_range_4: _T2 = 0x1f5fa....0x1f64f
private let __emoji_Emoji_range_5: _T2 = 0x1f680....0x1f6c5
private let __emoji_Emoji_range_6: _T2 = 0x1f9cd....0x1f9ff
private let __emoji_Emoji_array: _T3 = [
  __emoji_Emoji_range_0,
  __emoji_Emoji_range_1,
  __emoji_Emoji_range_2,
  __emoji_Emoji_range_3,
  __emoji_Emoji_range_4,
  __emoji_Emoji_range_5,
  __emoji_Emoji_range_6,
]
private let __emoji_Emoji_ranges = MultipleRanges<Unicode.Scalar.Value>(carefullySortedRanges: __emoji_Emoji_array)
internal let _emoji_Emoji = UnicodeScalarValueSet(singleValues: __emoji_Emoji_set, ranges: __emoji_Emoji_ranges)
/* ********************************************************************************************** */
// Emoji Property: Emoji_Component
private let __emoji_Emoji_Component_set: _T1 = [
  0x23,
  0x2a,
  0x30,
  0x31,
  0x32,
  0x33,
  0x34,
  0x35,
  0x36,
  0x37,
  0x38,
  0x39,
  0x200d,
  0x20e3,
  0xfe0f,
  0x1f1e6,
  0x1f1e7,
  0x1f1e8,
  0x1f1e9,
  0x1f1ea,
  0x1f1eb,
  0x1f1ec,
  0x1f1ed,
  0x1f1ee,
  0x1f1ef,
  0x1f1f0,
  0x1f1f1,
  0x1f1f2,
  0x1f1f3,
  0x1f1f4,
  0x1f1f5,
  0x1f1f6,
  0x1f1f7,
  0x1f1f8,
  0x1f1f9,
  0x1f1fa,
  0x1f1fb,
  0x1f1fc,
  0x1f1fd,
  0x1f1fe,
  0x1f1ff,
  0x1f3fb,
  0x1f3fc,
  0x1f3fd,
  0x1f3fe,
  0x1f3ff,
  0x1f9b0,
  0x1f9b1,
  0x1f9b2,
  0x1f9b3,
]
private let __emoji_Emoji_Component_range_0: _T2 = 0xe0020....0xe007f
private let __emoji_Emoji_Component_array: _T3 = [
  __emoji_Emoji_Component_range_0,
]
private let __emoji_Emoji_Component_ranges = MultipleRanges<Unicode.Scalar.Value>(carefullySortedRanges: __emoji_Emoji_Component_array)
internal let _emoji_Emoji_Component = UnicodeScalarValueSet(singleValues: __emoji_Emoji_Component_set, ranges: __emoji_Emoji_Component_ranges)
/* ********************************************************************************************** */
// Emoji Property: Emoji_Modifier
private let __emoji_Emoji_Modifier_set: _T1 = [
  0x1f3fb,
  0x1f3fc,
  0x1f3fd,
  0x1f3fe,
  0x1f3ff,
]
private let __emoji_Emoji_Modifier_array: _T3 = [
]
private let __emoji_Emoji_Modifier_ranges = MultipleRanges<Unicode.Scalar.Value>(carefullySortedRanges: __emoji_Emoji_Modifier_array)
internal let _emoji_Emoji_Modifier = UnicodeScalarValueSet(singleValues: __emoji_Emoji_Modifier_set, ranges: __emoji_Emoji_Modifier_ranges)
/* ********************************************************************************************** */
// Emoji Property: Emoji_Modifier_Base
private let __emoji_Emoji_Modifier_Base_set: _T1 = [
  0x261d,
  0x26f9,
  0x270a,
  0x270b,
  0x270c,
  0x270d,
  0x1f385,
  0x1f3c2,
  0x1f3c3,
  0x1f3c4,
  0x1f3c7,
  0x1f3ca,
  0x1f3cb,
  0x1f3cc,
  0x1f442,
  0x1f443,
  0x1f446,
  0x1f447,
  0x1f448,
  0x1f449,
  0x1f44a,
  0x1f44b,
  0x1f44c,
  0x1f44d,
  0x1f44e,
  0x1f44f,
  0x1f450,
  0x1f466,
  0x1f467,
  0x1f468,
  0x1f469,
  0x1f46a,
  0x1f46b,
  0x1f46c,
  0x1f46d,
  0x1f46e,
  0x1f46f,
  0x1f470,
  0x1f471,
  0x1f472,
  0x1f473,
  0x1f474,
  0x1f475,
  0x1f476,
  0x1f477,
  0x1f478,
  0x1f47c,
  0x1f481,
  0x1f482,
  0x1f483,
  0x1f485,
  0x1f486,
  0x1f487,
  0x1f48f,
  0x1f491,
  0x1f4aa,
  0x1f574,
  0x1f575,
  0x1f57a,
  0x1f590,
  0x1f595,
  0x1f596,
  0x1f645,
  0x1f646,
  0x1f647,
  0x1f64b,
  0x1f64c,
  0x1f64d,
  0x1f64e,
  0x1f64f,
  0x1f6a3,
  0x1f6b4,
  0x1f6b5,
  0x1f6b6,
  0x1f6c0,
  0x1f6cc,
  0x1f90f,
  0x1f918,
  0x1f919,
  0x1f91a,
  0x1f91b,
  0x1f91c,
  0x1f91d,
  0x1f91e,
  0x1f91f,
  0x1f926,
  0x1f930,
  0x1f931,
  0x1f932,
  0x1f933,
  0x1f934,
  0x1f935,
  0x1f936,
  0x1f937,
  0x1f938,
  0x1f939,
  0x1f93c,
  0x1f93d,
  0x1f93e,
  0x1f9b5,
  0x1f9b6,
  0x1f9b8,
  0x1f9b9,
  0x1f9bb,
  0x1f9cd,
  0x1f9ce,
  0x1f9cf,
  0x1f9d1,
  0x1f9d2,
  0x1f9d3,
  0x1f9d4,
  0x1f9d5,
  0x1f9d6,
  0x1f9d7,
  0x1f9d8,
  0x1f9d9,
  0x1f9da,
  0x1f9db,
  0x1f9dc,
  0x1f9dd,
]
private let __emoji_Emoji_Modifier_Base_array: _T3 = [
]
private let __emoji_Emoji_Modifier_Base_ranges = MultipleRanges<Unicode.Scalar.Value>(carefullySortedRanges: __emoji_Emoji_Modifier_Base_array)
internal let _emoji_Emoji_Modifier_Base = UnicodeScalarValueSet(singleValues: __emoji_Emoji_Modifier_Base_set, ranges: __emoji_Emoji_Modifier_Base_ranges)
/* ********************************************************************************************** */
// Emoji Property: Emoji_Presentation
private let __emoji_Emoji_Presentation_set: _T1 = [
  0x231a,
  0x231b,
  0x23e9,
  0x23ea,
  0x23eb,
  0x23ec,
  0x23f0,
  0x23f3,
  0x25fd,
  0x25fe,
  0x2614,
  0x2615,
  0x2648,
  0x2649,
  0x264a,
  0x264b,
  0x264c,
  0x264d,
  0x264e,
  0x264f,
  0x2650,
  0x2651,
  0x2652,
  0x2653,
  0x267f,
  0x2693,
  0x26a1,
  0x26aa,
  0x26ab,
  0x26bd,
  0x26be,
  0x26c4,
  0x26c5,
  0x26ce,
  0x26d4,
  0x26ea,
  0x26f2,
  0x26f3,
  0x26f5,
  0x26fa,
  0x26fd,
  0x2705,
  0x270a,
  0x270b,
  0x2728,
  0x274c,
  0x274e,
  0x2753,
  0x2754,
  0x2755,
  0x2757,
  0x2795,
  0x2796,
  0x2797,
  0x27b0,
  0x27bf,
  0x2b1b,
  0x2b1c,
  0x2b50,
  0x2b55,
  0x1f004,
  0x1f0cf,
  0x1f18e,
  0x1f191,
  0x1f192,
  0x1f193,
  0x1f194,
  0x1f195,
  0x1f196,
  0x1f197,
  0x1f198,
  0x1f199,
  0x1f19a,
  0x1f1e6,
  0x1f1e7,
  0x1f1e8,
  0x1f1e9,
  0x1f1ea,
  0x1f1eb,
  0x1f1ec,
  0x1f1ed,
  0x1f1ee,
  0x1f1ef,
  0x1f1f0,
  0x1f1f1,
  0x1f1f2,
  0x1f1f3,
  0x1f1f4,
  0x1f1f5,
  0x1f1f6,
  0x1f1f7,
  0x1f1f8,
  0x1f1f9,
  0x1f1fa,
  0x1f1fb,
  0x1f1fc,
  0x1f1fd,
  0x1f1fe,
  0x1f1ff,
  0x1f201,
  0x1f21a,
  0x1f22f,
  0x1f232,
  0x1f233,
  0x1f234,
  0x1f235,
  0x1f236,
  0x1f238,
  0x1f239,
  0x1f23a,
  0x1f250,
  0x1f251,
  0x1f300,
  0x1f301,
  0x1f302,
  0x1f303,
  0x1f304,
  0x1f305,
  0x1f306,
  0x1f307,
  0x1f308,
  0x1f309,
  0x1f30a,
  0x1f30b,
  0x1f30c,
  0x1f30d,
  0x1f30e,
  0x1f30f,
  0x1f310,
  0x1f311,
  0x1f312,
  0x1f313,
  0x1f314,
  0x1f315,
  0x1f316,
  0x1f317,
  0x1f318,
  0x1f319,
  0x1f31a,
  0x1f31b,
  0x1f31c,
  0x1f31d,
  0x1f31e,
  0x1f31f,
  0x1f320,
  0x1f32d,
  0x1f32e,
  0x1f32f,
  0x1f330,
  0x1f331,
  0x1f332,
  0x1f333,
  0x1f334,
  0x1f335,
  0x1f37e,
  0x1f37f,
  0x1f380,
  0x1f381,
  0x1f382,
  0x1f383,
  0x1f384,
  0x1f385,
  0x1f386,
  0x1f387,
  0x1f388,
  0x1f389,
  0x1f38a,
  0x1f38b,
  0x1f38c,
  0x1f38d,
  0x1f38e,
  0x1f38f,
  0x1f390,
  0x1f391,
  0x1f392,
  0x1f393,
  0x1f3a0,
  0x1f3a1,
  0x1f3a2,
  0x1f3a3,
  0x1f3a4,
  0x1f3a5,
  0x1f3a6,
  0x1f3a7,
  0x1f3a8,
  0x1f3a9,
  0x1f3aa,
  0x1f3ab,
  0x1f3ac,
  0x1f3ad,
  0x1f3ae,
  0x1f3af,
  0x1f3b0,
  0x1f3b1,
  0x1f3b2,
  0x1f3b3,
  0x1f3b4,
  0x1f3b5,
  0x1f3b6,
  0x1f3b7,
  0x1f3b8,
  0x1f3b9,
  0x1f3ba,
  0x1f3bb,
  0x1f3bc,
  0x1f3bd,
  0x1f3be,
  0x1f3bf,
  0x1f3c0,
  0x1f3c1,
  0x1f3c2,
  0x1f3c3,
  0x1f3c4,
  0x1f3c5,
  0x1f3c6,
  0x1f3c7,
  0x1f3c8,
  0x1f3c9,
  0x1f3ca,
  0x1f3cf,
  0x1f3d0,
  0x1f3d1,
  0x1f3d2,
  0x1f3d3,
  0x1f3e0,
  0x1f3e1,
  0x1f3e2,
  0x1f3e3,
  0x1f3e4,
  0x1f3e5,
  0x1f3e6,
  0x1f3e7,
  0x1f3e8,
  0x1f3e9,
  0x1f3ea,
  0x1f3eb,
  0x1f3ec,
  0x1f3ed,
  0x1f3ee,
  0x1f3ef,
  0x1f3f0,
  0x1f3f4,
  0x1f440,
  0x1f54b,
  0x1f54c,
  0x1f54d,
  0x1f54e,
  0x1f550,
  0x1f551,
  0x1f552,
  0x1f553,
  0x1f554,
  0x1f555,
  0x1f556,
  0x1f557,
  0x1f558,
  0x1f559,
  0x1f55a,
  0x1f55b,
  0x1f55c,
  0x1f55d,
  0x1f55e,
  0x1f55f,
  0x1f560,
  0x1f561,
  0x1f562,
  0x1f563,
  0x1f564,
  0x1f565,
  0x1f566,
  0x1f567,
  0x1f57a,
  0x1f595,
  0x1f596,
  0x1f5a4,
  0x1f6cc,
  0x1f6d0,
  0x1f6d1,
  0x1f6d2,
  0x1f6d5,
  0x1f6eb,
  0x1f6ec,
  0x1f6f4,
  0x1f6f5,
  0x1f6f6,
  0x1f6f7,
  0x1f6f8,
  0x1f6f9,
  0x1f6fa,
  0x1f7e0,
  0x1f7e1,
  0x1f7e2,
  0x1f7e3,
  0x1f7e4,
  0x1f7e5,
  0x1f7e6,
  0x1f7e7,
  0x1f7e8,
  0x1f7e9,
  0x1f7ea,
  0x1f7eb,
  0x1f90d,
  0x1f90e,
  0x1f90f,
  0x1f910,
  0x1f911,
  0x1f912,
  0x1f913,
  0x1f914,
  0x1f915,
  0x1f916,
  0x1f917,
  0x1f918,
  0x1f919,
  0x1f91a,
  0x1f91b,
  0x1f91c,
  0x1f91d,
  0x1f91e,
  0x1f91f,
  0x1f920,
  0x1f921,
  0x1f922,
  0x1f923,
  0x1f924,
  0x1f925,
  0x1f926,
  0x1f927,
  0x1f928,
  0x1f929,
  0x1f92a,
  0x1f92b,
  0x1f92c,
  0x1f92d,
  0x1f92e,
  0x1f92f,
  0x1f930,
  0x1f931,
  0x1f932,
  0x1f933,
  0x1f934,
  0x1f935,
  0x1f936,
  0x1f937,
  0x1f938,
  0x1f939,
  0x1f93a,
  0x1f93c,
  0x1f93d,
  0x1f93e,
  0x1f93f,
  0x1f940,
  0x1f941,
  0x1f942,
  0x1f943,
  0x1f944,
  0x1f945,
  0x1f947,
  0x1f948,
  0x1f949,
  0x1f94a,
  0x1f94b,
  0x1f94c,
  0x1f94d,
  0x1f94e,
  0x1f94f,
  0x1f950,
  0x1f951,
  0x1f952,
  0x1f953,
  0x1f954,
  0x1f955,
  0x1f956,
  0x1f957,
  0x1f958,
  0x1f959,
  0x1f95a,
  0x1f95b,
  0x1f95c,
  0x1f95d,
  0x1f95e,
  0x1f95f,
  0x1f960,
  0x1f961,
  0x1f962,
  0x1f963,
  0x1f964,
  0x1f965,
  0x1f966,
  0x1f967,
  0x1f968,
  0x1f969,
  0x1f96a,
  0x1f96b,
  0x1f96c,
  0x1f96d,
  0x1f96e,
  0x1f96f,
  0x1f970,
  0x1f971,
  0x1f973,
  0x1f974,
  0x1f975,
  0x1f976,
  0x1f97a,
  0x1f97b,
  0x1f97c,
  0x1f97d,
  0x1f97e,
  0x1f97f,
  0x1f980,
  0x1f981,
  0x1f982,
  0x1f983,
  0x1f984,
  0x1f985,
  0x1f986,
  0x1f987,
  0x1f988,
  0x1f989,
  0x1f98a,
  0x1f98b,
  0x1f98c,
  0x1f98d,
  0x1f98e,
  0x1f98f,
  0x1f990,
  0x1f991,
  0x1f992,
  0x1f993,
  0x1f994,
  0x1f995,
  0x1f996,
  0x1f997,
  0x1f998,
  0x1f999,
  0x1f99a,
  0x1f99b,
  0x1f99c,
  0x1f99d,
  0x1f99e,
  0x1f99f,
  0x1f9a0,
  0x1f9a1,
  0x1f9a2,
  0x1f9a5,
  0x1f9a6,
  0x1f9a7,
  0x1f9a8,
  0x1f9a9,
  0x1f9aa,
  0x1f9ae,
  0x1f9af,
  0x1f9b0,
  0x1f9b1,
  0x1f9b2,
  0x1f9b3,
  0x1f9b4,
  0x1f9b5,
  0x1f9b6,
  0x1f9b7,
  0x1f9b8,
  0x1f9b9,
  0x1f9ba,
  0x1f9bb,
  0x1f9bc,
  0x1f9bd,
  0x1f9be,
  0x1f9bf,
  0x1f9c0,
  0x1f9c1,
  0x1f9c2,
  0x1f9c3,
  0x1f9c4,
  0x1f9c5,
  0x1f9c6,
  0x1f9c7,
  0x1f9c8,
  0x1f9c9,
  0x1f9ca,
  0x1fa70,
  0x1fa71,
  0x1fa72,
  0x1fa73,
  0x1fa78,
  0x1fa79,
  0x1fa7a,
  0x1fa80,
  0x1fa81,
  0x1fa82,
  0x1fa90,
  0x1fa91,
  0x1fa92,
  0x1fa93,
  0x1fa94,
  0x1fa95,
]
private let __emoji_Emoji_Presentation_range_0: _T2 = 0x1f337....0x1f37c
private let __emoji_Emoji_Presentation_range_1: _T2 = 0x1f3f8....0x1f43e
private let __emoji_Emoji_Presentation_range_2: _T2 = 0x1f442....0x1f4fc
private let __emoji_Emoji_Presentation_range_3: _T2 = 0x1f4ff....0x1f53d
private let __emoji_Emoji_Presentation_range_4: _T2 = 0x1f5fb....0x1f64f
private let __emoji_Emoji_Presentation_range_5: _T2 = 0x1f680....0x1f6c5
private let __emoji_Emoji_Presentation_range_6: _T2 = 0x1f9cd....0x1f9ff
private let __emoji_Emoji_Presentation_array: _T3 = [
  __emoji_Emoji_Presentation_range_0,
  __emoji_Emoji_Presentation_range_1,
  __emoji_Emoji_Presentation_range_2,
  __emoji_Emoji_Presentation_range_3,
  __emoji_Emoji_Presentation_range_4,
  __emoji_Emoji_Presentation_range_5,
  __emoji_Emoji_Presentation_range_6,
]
private let __emoji_Emoji_Presentation_ranges = MultipleRanges<Unicode.Scalar.Value>(carefullySortedRanges: __emoji_Emoji_Presentation_array)
internal let _emoji_Emoji_Presentation = UnicodeScalarValueSet(singleValues: __emoji_Emoji_Presentation_set, ranges: __emoji_Emoji_Presentation_ranges)
/* ********************************************************************************************** */
// Emoji Property: Extended_Pictographic
private let __emoji_Extended_Pictographic_set: _T1 = [
  0xa9,
  0xae,
  0x203c,
  0x2049,
  0x2122,
  0x2139,
  0x2194,
  0x2195,
  0x2196,
  0x2197,
  0x2198,
  0x2199,
  0x21a9,
  0x21aa,
  0x231a,
  0x231b,
  0x2328,
  0x2388,
  0x23cf,
  0x23e9,
  0x23ea,
  0x23eb,
  0x23ec,
  0x23ed,
  0x23ee,
  0x23ef,
  0x23f0,
  0x23f1,
  0x23f2,
  0x23f3,
  0x23f8,
  0x23f9,
  0x23fa,
  0x24c2,
  0x25aa,
  0x25ab,
  0x25b6,
  0x25c0,
  0x25fb,
  0x25fc,
  0x25fd,
  0x25fe,
  0x2600,
  0x2601,
  0x2602,
  0x2603,
  0x2604,
  0x2605,
  0x2607,
  0x2608,
  0x2609,
  0x260a,
  0x260b,
  0x260c,
  0x260d,
  0x260e,
  0x260f,
  0x2610,
  0x2611,
  0x2612,
  0x2708,
  0x2709,
  0x270a,
  0x270b,
  0x270c,
  0x270d,
  0x270e,
  0x270f,
  0x2710,
  0x2711,
  0x2712,
  0x2714,
  0x2716,
  0x271d,
  0x2721,
  0x2728,
  0x2733,
  0x2734,
  0x2744,
  0x2747,
  0x274c,
  0x274e,
  0x2753,
  0x2754,
  0x2755,
  0x2757,
  0x2763,
  0x2764,
  0x2765,
  0x2766,
  0x2767,
  0x2795,
  0x2796,
  0x2797,
  0x27a1,
  0x27b0,
  0x27bf,
  0x2934,
  0x2935,
  0x2b05,
  0x2b06,
  0x2b07,
  0x2b1b,
  0x2b1c,
  0x2b50,
  0x2b55,
  0x3030,
  0x303d,
  0x3297,
  0x3299,
  0x1f10d,
  0x1f10e,
  0x1f10f,
  0x1f12f,
  0x1f16c,
  0x1f16d,
  0x1f16e,
  0x1f16f,
  0x1f170,
  0x1f171,
  0x1f17e,
  0x1f17f,
  0x1f18e,
  0x1f191,
  0x1f192,
  0x1f193,
  0x1f194,
  0x1f195,
  0x1f196,
  0x1f197,
  0x1f198,
  0x1f199,
  0x1f19a,
  0x1f201,
  0x1f202,
  0x1f203,
  0x1f204,
  0x1f205,
  0x1f206,
  0x1f207,
  0x1f208,
  0x1f209,
  0x1f20a,
  0x1f20b,
  0x1f20c,
  0x1f20d,
  0x1f20e,
  0x1f20f,
  0x1f21a,
  0x1f22f,
  0x1f232,
  0x1f233,
  0x1f234,
  0x1f235,
  0x1f236,
  0x1f237,
  0x1f238,
  0x1f239,
  0x1f23a,
  0x1f23c,
  0x1f23d,
  0x1f23e,
  0x1f23f,
  0x1f774,
  0x1f775,
  0x1f776,
  0x1f777,
  0x1f778,
  0x1f779,
  0x1f77a,
  0x1f77b,
  0x1f77c,
  0x1f77d,
  0x1f77e,
  0x1f77f,
  0x1f7d5,
  0x1f7d6,
  0x1f7d7,
  0x1f7d8,
  0x1f7d9,
  0x1f7da,
  0x1f7db,
  0x1f7dc,
  0x1f7dd,
  0x1f7de,
  0x1f7df,
  0x1f7e0,
  0x1f7e1,
  0x1f7e2,
  0x1f7e3,
  0x1f7e4,
  0x1f7e5,
  0x1f7e6,
  0x1f7e7,
  0x1f7e8,
  0x1f7e9,
  0x1f7ea,
  0x1f7eb,
  0x1f7ec,
  0x1f7ed,
  0x1f7ee,
  0x1f7ef,
  0x1f7f0,
  0x1f7f1,
  0x1f7f2,
  0x1f7f3,
  0x1f7f4,
  0x1f7f5,
  0x1f7f6,
  0x1f7f7,
  0x1f7f8,
  0x1f7f9,
  0x1f7fa,
  0x1f7fb,
  0x1f7fc,
  0x1f7fd,
  0x1f7fe,
  0x1f7ff,
  0x1f80c,
  0x1f80d,
  0x1f80e,
  0x1f80f,
  0x1f848,
  0x1f849,
  0x1f84a,
  0x1f84b,
  0x1f84c,
  0x1f84d,
  0x1f84e,
  0x1f84f,
  0x1f85a,
  0x1f85b,
  0x1f85c,
  0x1f85d,
  0x1f85e,
  0x1f85f,
  0x1f888,
  0x1f889,
  0x1f88a,
  0x1f88b,
  0x1f88c,
  0x1f88d,
  0x1f88e,
  0x1f88f,
  0x1f90c,
  0x1f90d,
  0x1f90e,
  0x1f90f,
  0x1f910,
  0x1f911,
  0x1f912,
  0x1f913,
  0x1f914,
  0x1f915,
  0x1f916,
  0x1f917,
  0x1f918,
  0x1f919,
  0x1f91a,
  0x1f91b,
  0x1f91c,
  0x1f91d,
  0x1f91e,
  0x1f91f,
  0x1f920,
  0x1f921,
  0x1f922,
  0x1f923,
  0x1f924,
  0x1f925,
  0x1f926,
  0x1f927,
  0x1f928,
  0x1f929,
  0x1f92a,
  0x1f92b,
  0x1f92c,
  0x1f92d,
  0x1f92e,
  0x1f92f,
  0x1f930,
  0x1f931,
  0x1f932,
  0x1f933,
  0x1f934,
  0x1f935,
  0x1f936,
  0x1f937,
  0x1f938,
  0x1f939,
  0x1f93a,
  0x1f93c,
  0x1f93d,
  0x1f93e,
  0x1f93f,
  0x1f940,
  0x1f941,
  0x1f942,
  0x1f943,
  0x1f944,
  0x1f945,
]
private let __emoji_Extended_Pictographic_range_0: _T2 = 0x2614....0x2685
private let __emoji_Extended_Pictographic_range_1: _T2 = 0x2690....0x2705
private let __emoji_Extended_Pictographic_range_2: _T2 = 0x1f000....0x1f0ff
private let __emoji_Extended_Pictographic_range_3: _T2 = 0x1f1ad....0x1f1e5
private let __emoji_Extended_Pictographic_range_4: _T2 = 0x1f249....0x1f3fa
private let __emoji_Extended_Pictographic_range_5: _T2 = 0x1f400....0x1f53d
private let __emoji_Extended_Pictographic_range_6: _T2 = 0x1f546....0x1f64f
private let __emoji_Extended_Pictographic_range_7: _T2 = 0x1f680....0x1f6ff
private let __emoji_Extended_Pictographic_range_8: _T2 = 0x1f8ae....0x1f8ff
private let __emoji_Extended_Pictographic_range_9: _T2 = 0x1f947....0x1fffd
private let __emoji_Extended_Pictographic_array: _T3 = [
  __emoji_Extended_Pictographic_range_0,
  __emoji_Extended_Pictographic_range_1,
  __emoji_Extended_Pictographic_range_2,
  __emoji_Extended_Pictographic_range_3,
  __emoji_Extended_Pictographic_range_4,
  __emoji_Extended_Pictographic_range_5,
  __emoji_Extended_Pictographic_range_6,
  __emoji_Extended_Pictographic_range_7,
  __emoji_Extended_Pictographic_range_8,
  __emoji_Extended_Pictographic_range_9,
]
private let __emoji_Extended_Pictographic_ranges = MultipleRanges<Unicode.Scalar.Value>(carefullySortedRanges: __emoji_Extended_Pictographic_array)
internal let _emoji_Extended_Pictographic = UnicodeScalarValueSet(singleValues: __emoji_Extended_Pictographic_set, ranges: __emoji_Extended_Pictographic_ranges)
